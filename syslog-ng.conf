@version:3.35
@include "scl.conf"
## syslog-ng configuration file.
##
##  This should behave pretty much like the original syslog on RedHat. But
##  it could be configured a lot smarter.
##
##  See syslog-ng(8) and syslog-ng.conf(5) for more information.
##
##  Note: it also sources additional configuration files (*.conf)
##       located in /etc/syslog-ng/conf.d/


################################################################################
#### Global config ####
options {
  create-dirs(yes);
  # Specific file/directory permissions can be set
  # this is particularly needed, if Splunk UF is running as non-root
  owner("splunk");
  group("splunk");
  dir-owner("splunk");
  dir-group("splunk");
  dir-perm(0755);
  perm(0755);
  time-reopen(10);
  keep-hostname(yes);
  log-msg-size(65536);
  flush_lines (0);
  time_reopen (10);
  log_fifo_size (1000);
  chain_hostnames (off);
#   use_dns (no);
  use_fqdn (no);
  keep_hostname (yes);

};

################################################################################

#### Enable listeners ####
# listen on TCP and UDP 514



source s_sys {
    system();
    internal();
    # udp(ip(0.0.0.0) port(514));
};


source remoteLogging
{
    udp(port(514));
    tcp(port(514));
};


# source remoteLoggingSpecialPort
# {
#     udp(port(1514));
#     tcp(port(1514));
# };



# # TLS encrypted syslog
# source tls_remotes {
#     network(
#         ip(0.0.0.0) port(10514)
#         transport("tls")
#         tls(
#                 key-file("/opt/syslog-ng/key.d/privkey.pem")
#                 cert-file("/opt/syslog-ng/cert.d/cacert.pem")
#                 peer-verify(optional-untrusted)
#         )
#     );
# };


################################################################################
#### Log remote sources classification ####

destination d_cons { file("/dev/console"); };
destination d_mesg { file("/var/log/messages"); };
destination d_auth { file("/var/log/secure"); };
destination d_mail { file("/var/log/maillog" flush_lines(10)); };
destination d_spol { file("/var/log/spooler"); };
destination d_boot { file("/var/log/boot.log"); };
destination d_cron { file("/var/log/cron"); };
destination d_kern { file("/var/log/kern"); };
destination d_mlal { usertty("*"); };





destination d_sourcefire_syslog { file("/syslog/logs/cisco/asa/$HOST/$YEAR-$MONTH-$DAY.log"); };
filter f_sourcefire { match("sourcefire|10.200.1" value("HOST")) };
log { source(remoteLogging); filter(f_sourcefire); destination(d_sourcefire_syslog); };


# catch all, all data that did not meet above criteria will end up here
destination d_unclassified { file("/syslog/logs/catch_all/$HOST/$YEAR-$MONTH-$DAY.log"); };
log { source(remoteLogging); destination(d_unclassified); flags(fallback); };




# destination d_sourcefire_syslog { file("/var/log/remote/sourcefire/$HOST/$YEAR-$MONTH-$DAY.log"); };
# filter f_sourcefire { match("sourcefire|10.200.1" value("HOST")) };
# log { source(remoteLogging); filter(f_sourcefire); destination(d_sourcefire_syslog); };

# # catch all, all data that did not meet above criteria will end up here
# destination d_unclassified { file("/var/log/remote/unclassified/$HOST/$YEAR-$MONTH-$DAY.log"); };
# log { source(remoteLogging); destination(d_unclassified); flags(fallback); };

# # if difficult to assign data classification based on hostname/IP, separate ports can be used
# destination d_specialPort { file("/var/log/remote/specialPort/$HOST/$YEAR-$MONTH-$DAY.log"); };
# log { source(remoteLoggingSpecialPort); destination(d_specialPort); };

################################################################################



filter f_kernel     { facility(kern); };
filter f_default    { level(info..emerg) and
                        not (facility(mail)
                        or facility(authpriv)
                        or facility(cron)); };
filter f_auth       { facility(authpriv); };
filter f_mail       { facility(mail); };
filter f_emergency  { level(emerg); };
filter f_news       { facility(uucp) or
                        (facility(news)
                        and level(crit..emerg)); };
filter f_boot   { facility(local7); };
filter f_cron   { facility(cron); };



#log { source(s_sys); filter(f_kernel); destination(d_cons); };
log { source(s_sys); filter(f_kernel); destination(d_kern); };
log { source(s_sys); filter(f_default); destination(d_mesg); };
log { source(s_sys); filter(f_auth); destination(d_auth); };
log { source(s_sys); filter(f_mail); destination(d_mail); };
log { source(s_sys); filter(f_emergency); destination(d_mlal); };
log { source(s_sys); filter(f_news); destination(d_spol); };
log { source(s_sys); filter(f_boot); destination(d_boot); };
log { source(s_sys); filter(f_cron); destination(d_cron); };


# Source additional configuration files (.conf extension only)
@include "/etc/syslog-ng/conf.d/*.conf"


# vim:ft=syslog-ng:ai:si:ts=4:sw=4:et:

